#include <bits/stdc++.h>
using namespace std;

int dp[100002];
int dp2[100002];
int solution(vector<int> sticker)
{
    int answer =0;
    int len = sticker.size();
    
    if(len == 1) return sticker[0];
    
    // 첫 번째 숫자를 담았을 경우
    dp[0] = sticker[0];
    dp[1] = dp[0]; // 1번째 인자까지의 최대값은 0이 아니라 dp[0]이다.
    for(int i = 2; i < sticker.size() - 1; i++){
        dp[i] = max(dp[i-1], dp[i-2] + sticker[i]);
    }
    
    // 첫 번째 숫자를 담지 않았을 경우
    dp2[0] = 0;
    dp2[1] = sticker[1];
    for(int i = 2; i < sticker.size(); i++){
        dp2[i] = max(dp2[i-1], dp2[i-2] + sticker[i]);
    }
    answer = max(dp[len-2], dp2[len-1]); // len이 1일 경우 dp[len-2]의 index가 음수가 되므로 len이 1인 경우는 따로 빼서 예외 처리를 해줘야한다.(line 11)
    return answer;
}
