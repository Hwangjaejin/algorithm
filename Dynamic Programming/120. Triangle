class Solution {
public:
    int minimumTotal(vector<vector<int>>& triangle) {
        int dp[202][202];
        dp[0][0] = triangle[0][0];
        
        int col = 2;
        for(int i = 1; i < triangle.size(); i++){
            for(int j = 0; j < col; j++){
                if(j == 0){
                    dp[i][j] = triangle[i][j] + dp[i-1][j];
                }else if(j == col-1){
                    dp[i][j] = triangle[i][j] + dp[i-1][j-1];
                }else{
                    dp[i][j] = min(triangle[i][j] + dp[i-1][j], triangle[i][j] + dp[i-1][j-1]);
                }
            }
            cout << endl;
            col++;
        }
        vector<int> result;
        for(int i = 0; i < triangle.size(); i++){
            result.push_back(dp[triangle.size()-1][i]);
        }
        sort(result.begin(),result.end());
        return result[0];
    }
};
