class Solution {
public:
    
    vector<vector<int>> ans;
    vector<int> temp;
    bool visited[11];
    
    
    void dfs(int idx, int cnt, int target, vector<int>& nums){
        if(cnt == target){
            ans.push_back(temp);
            return;
        }
        for(int i = idx; i < nums.size(); i++){
            if(visited[i]) continue;
            visited[i] = true;
            temp.push_back(nums[i]);
            dfs(i, cnt+1, target, nums);
            temp.pop_back();
            visited[i] = false;
        }
    }
    vector<vector<int>> subsets(vector<int>& nums) {
        ans.push_back(temp);
        
        for(int i = 1; i <= nums.size(); i++){
            dfs(0, 0, i, nums);
        }
        return ans;
    }
};
