#include <bits/stdc++.h>

using namespace std;
long long answer = 0;
vector<char> c, location;
vector<long long> num;
long long solution(string expression) {
    
    string tmp = "";
    for(int i = 0; i < expression.size(); i++){
        if(expression[i] == '-' || expression[i] == '+' || expression[i] == '*'){
            num.push_back(stoi(tmp));
            tmp = "";
            if(find(c.begin(), c.end(), expression[i]) == c.end()) c.push_back(expression[i]);
            location.push_back(expression[i]);
        }else{
            tmp += expression[i];
        }
    }
    num.push_back(stoi(tmp));
    sort(c.begin(), c.end());
    do{
        vector<long long> tmp_num = num;
        vector<char> tmp_location = location;
        
        for(int i = 0; i < c.size(); i++){
            for(int j = 0; j < tmp_location.size(); j++){
                if(c[i] == tmp_location[j]){
                    if(c[i] == '-'){
                        tmp_num[j] = tmp_num[j] - tmp_num[j+1];
                    }else if(c[i] == '+'){
                        tmp_num[j] = tmp_num[j] + tmp_num[j+1];
                    }else if(c[i] == '*'){
                        tmp_num[j] = tmp_num[j] * tmp_num[j+1];
                    }
                    tmp_num.erase(tmp_num.begin() + j + 1);
                    tmp_location.erase(tmp_location.begin() + j);
                    j--;
                }
            }
        }
        if(answer < abs(tmp_num[0]))
            answer = abs(tmp_num[0]);
    }while(next_permutation(c.begin(), c.end()));
    return answer;
}
