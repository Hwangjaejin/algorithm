class Solution {
public:
    int trap(vector<int>& height) {
        int ans = 0;
        
        int left = 0, right = height.size() - 1;
        int left_max = 0, right_max = 0;
        
        while(left <= right){
            if(height[left] <= height[right]){ // 양쪽 끝 중에서 왼쪽이 작은경우
                if(height[left] >= left_max) left_max = height[left]; // 현재까지 왼쪽에서 가장 큰 수보다 현재 index의 수가 더 큰 경우 left_max 바꾸기
                else ans += left_max - height[left]; // 현재까지 왼쪽에서 가장 큰 수보다 현재 index의 값이 더 작은 경우 그 차이만큼 결과에 더하기
                left++; // 왼쪽 포인터 1증가
            }else{
                if(height[right] >= right_max) right_max = height[right];
                else ans += right_max - height[right];
                right--;
            }
        }
        return ans;
    }
};
