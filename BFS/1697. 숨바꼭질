#include <bits/stdc++.h>
using namespace std;

#define INF 987654321
using ll = long long;

int dx[4] = { 0,0,1,-1 };
int dy[4] = { 1,-1,0,0 };

int N, K;
int visited[200002]; // 움진인 횟수를 담는 배열, *2 인 경우의 범위를 생각해서 200000만 까지 열어놔야함.

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	int answer = 0;

	cin >> N >> K;

	fill(visited, visited + 100001, -1);

	queue<int> q;
	q.push(N);
	visited[N] = 0; // 출발지(움직인 횟수 0)

	while (visited[K] == -1) {
		int cur = q.front();
		q.pop();

		for (int next : {cur + 1, cur - 1, cur * 2}) {
			if (visited[next] != -1) continue;
			if (next < 0 || next > 100000) continue;
			visited[next] = visited[cur] + 1;
			q.push(next);
		}
	}
	cout << visited[K]; // 도착지(K)까지 걸린 횟수
	return 0;
}
