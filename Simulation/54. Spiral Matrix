class Solution {
public:
    
    bool visited[12][12];
    
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int> ans;
        
        int row = matrix.size();
        int col = matrix[0].size();

        int dir = 1;
        int i = 0, j = 0;
        ans.push_back(matrix[0][0]);
        visited[0][0] = true;
        
        while(1){
            if(dir == 1){ // 우
                if(j + 1 == col || visited[i][j+1]){
                    if(i + 1 == row || visited[i+1][j]) break;
                    dir = 2;
                    i++;
                }else{
                    j++;
                }
                visited[i][j] = true;
                ans.push_back(matrix[i][j]);
            }else if(dir == 2){ // 하
                if(i + 1 == row || visited[i+1][j]){
                    if(j - 1 == -1 || visited[i][j-1]) break;
                    dir = 3;
                    j--;
                }else{
                    i++;
                }
                visited[i][j] = true;
                ans.push_back(matrix[i][j]);
            }else if(dir == 3){ // 좌
                if(j - 1 == -1 || visited[i][j-1]){
                    if(i - 1 == -1 || visited[i-1][j]) break;
                    dir = 4;
                    i--;
                }else{
                    j--;
                }
                visited[i][j] = true;
                ans.push_back(matrix[i][j]);
            }else if(dir == 4){ // 상
                if(i - 1 == -1 || visited[i-1][j]){
                    if(j + 1 == row || visited[i][j+1]) break;
                    dir = 1;
                    j++;
                }else{
                    i--;
                }
                visited[i][j] = true;
                ans.push_back(matrix[i][j]);
            }
        }
        
        return ans;
    }
};
